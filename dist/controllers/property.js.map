{"version":3,"sources":["../../server/controllers/property.js"],"names":["Property","addProperty","req","res","id","tokenData","body","state","city","address","type","price","image_url","displayResult","PropertyModel","addNew","owner","serverFeedback","err","updateProperty","propId","Number","params","propertyId","propArray","AllProperty","propertyData","find","property","propIndex","findIndex","deleteProperty","propToDelete","markSold","propToUpdate","status","getPropertyType","data","specificPropertyType","filter","getAllProperty","allProperty","allUsers","User","AllUsers","finalList","map","pro","ownerID","user","el","ownerEmail","email","ownerPhoneNumber","phoneNumber","finalResult","query","queryResult","length","getOneProperty","result","findProperty","proOwnerID","userList","UserModel","proOwner"],"mappings":"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","sourcesContent":["import UserModel from \"../models/user\";\nimport PropertyModel from \"../models/property\";\nimport { serverFeedback, findError } from \"../helpers/Feedback\";\nconst Property = {\n    addProperty(req, res) {\n        try {\n            const { id } = req.tokenData;\n            const {\n                state, city, address, type, price, image_url\n            } = req.body;\n            const displayResult = PropertyModel.addNew({\n                owner: id,\n                price,\n                state,\n                city,\n                image_url,\n                type,\n                address\n            });\n            return serverFeedback(res, 201, ...['status', 'success', 'data', displayResult]);\n        } catch (err) {\n            return findError(res);\n        }\n    },\n    updateProperty(req, res) {\n        try {\n            const propId = Number(req.params.propertyId);\n            const propArray = PropertyModel.AllProperty();\n            const propertyData = propArray.find(property => property.id === propId);\n            const propIndex = propArray.findIndex(property => property.id === propId);\n            const {\n                state, city, address, type, price, image_url\n            } = req.body;\n            propertyData.state = (propertyData.state === state) ? propertyData.state : state;\n            propertyData.price = (propertyData.price === price) ? propertyData.price : price;\n            propertyData.city = (propertyData.city === city) ? propertyData.city : city;\n            propertyData.address = (propertyData.address === address) ? propertyData.address : address;\n            propertyData.image_url = (propertyData.image_url === image_url) ? propertyData.image_url : image_url;\n            propertyData.type = (propertyData.type === type) ? propertyData.type : type;\n            PropertyModel.updateProperty(propertyData, propIndex);\n            return serverFeedback(res, 200, ...['status', 'success', 'data', propertyData]);\n        } catch (err) {\n            return findError(res);\n        }\n    },\n\n    deleteProperty(req, res) {\n        try {\n            const id = Number(req.params.propertyId);\n            const propToDelete = PropertyModel.deleteProperty(id);\n            if (propToDelete) {\n                return serverFeedback(res, 200, ...['status', 'success', 'data', { 'message': 'Property deleted Successfully' }]);\n            }\n            return serverFeedback(res, 404, ...['status', 'error', 'data', { 'message': 'Property not found. Property may have been removed' }]);\n\n        } catch (err) {\n            return findError(res);\n        }\n    },\n    markSold(req, res) {\n        try {\n            const id = Number(req.params.propertyId);\n            const propArray = PropertyModel.AllProperty();\n            const propToUpdate = propArray.find(property => property.id === id);\n            const propIndex = propArray.findIndex(property => property.id === id);\n            propToUpdate.status = 'Sold';\n            PropertyModel.updateProperty(propToUpdate, propIndex);\n            return serverFeedback(res, 200, ...['status', 'success', 'data', propToUpdate]);\n        } catch (err) {\n            return findError(res);\n        }\n    },\n    getPropertyType(data, type) {\n        const specificPropertyType = data.filter(property => property.type === type);\n        return specificPropertyType;\n    },\n    getAllProperty(req, res) {\n        try {\n            const allProperty = PropertyModel.AllProperty();\n            const allUsers = User.AllUsers();\n            const finalList = allProperty.map((pro) => {\n                const ownerID = pro.owner;\n                const user = allUsers.find(el => el.id === ownerID);\n                pro.ownerEmail = user.email;\n                pro.ownerPhoneNumber = user.phoneNumber;\n                const { owner, ...finalResult } = pro;\n                return finalResult;\n            });\n            if (req.query.type) {\n                const { type } = req.query;\n                const queryResult = getPropertyType(finalList, type);\n                if (queryResult.length) {\n                    return serverFeedback(res, 200, ...['status', 'success', 'data', queryResult]);\n                } else {\n                    serverFeedback(res, 403, ...['status', 'error', 'data', { 'message': 'Enter a valid value and try again.' }]);\n                }\n            }\n            return serverFeedback(res, 200, ...['status', 'success', 'data', finalList]);\n        } catch (err) {\n            return findError(res);\n        }\n    },\n    getOneProperty(req, res) {\n        try {\n            const id = Number(req.params.propertyId);\n            if (!id) return serverFeedback(res, 403, ...['status', 'error', 'data', { 'message': 'Invalid ID' }]);\n            const result = PropertyModel.findProperty(id);\n            if (!result) return serverFeedback(res, 404, ...['status', 'error', 'data', { 'message': 'No result found. Enter a valid value and try again.' }]);\n            const proOwnerID = result.owner;\n            const userList = UserModel.AllUsers();\n            const proOwner = userList.find(user => user.id === proOwnerID);\n            result.ownerEmail = proOwner.email;\n            result.ownerPhoneNumber = proOwner.phoneNumber;\n            const { owner, ...finalResult } = result;\n            return serverFeedback(res, 200, ...['status', 'success', 'data', finalResult]);\n        } catch (err) {\n            return findError(res);\n        }\n    }\n}\nexport default Property;\n"],"file":"property.js"}