{"version":3,"sources":["../../server/models/property.js"],"names":["Property","proList","proData","propertyList","p","owner","price","state","city","address","type","image_url","proId","length","Id","newProperty","id","created_on","moment","now","status","push","oneProperty","find","property","propObj","propId","splice","propArr","propIndex","findIndex"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;IAGMA,Q;;;AACF,sBAAc;AAAA;;AACV,SAAKC,OAAL,GAAeC,oBAAQC,YAAvB;AACH;;;;2BAEMC,C,EAAG;AAAA,UAEFC,KAFE,GAGFD,CAHE,CAEFC,KAFE;AAAA,UAEKC,KAFL,GAGFF,CAHE,CAEKE,KAFL;AAAA,UAEYC,KAFZ,GAGFH,CAHE,CAEYG,KAFZ;AAAA,UAEmBC,IAFnB,GAGFJ,CAHE,CAEmBI,IAFnB;AAAA,UAEyBC,OAFzB,GAGFL,CAHE,CAEyBK,OAFzB;AAAA,UAEkCC,IAFlC,GAGFN,CAHE,CAEkCM,IAFlC;AAAA,UAEwCC,SAFxC,GAGFP,CAHE,CAEwCO,SAFxC;AAIN,UAAMC,KAAK,GAAG,KAAKX,OAAL,CAAaY,MAA3B;AACAC,MAAAA,EAAE,GAAGF,KAAK,GAAG,CAAb;AAEA,UAAMG,WAAW,GAAG;AAChBV,QAAAA,KAAK,EAALA,KADgB;AAEhBW,QAAAA,EAAE,EAAEF,EAFY;AAGhBR,QAAAA,KAAK,EAALA,KAHgB;AAIhBC,QAAAA,KAAK,EAALA,KAJgB;AAKhBC,QAAAA,IAAI,EAAJA,IALgB;AAMhBE,QAAAA,IAAI,EAAJA,IANgB;AAOhBD,QAAAA,OAAO,EAAPA,OAPgB;AAQhBE,QAAAA,SAAS,EAATA,SARgB;AAShBM,QAAAA,UAAU,EAAEC,mBAAOC,GAAP,EATI;AAUhBC,QAAAA,MAAM,EAAE;AAVQ,OAApB;AAaA,WAAKnB,OAAL,CAAaoB,IAAb,CAAkBN,WAAlB;AACA,aAAOA,WAAP;AACH;;;kCAEa;AACV,aAAO,KAAKd,OAAZ;AACH;;;iCAEYe,E,EAAI;AACb,UAAMM,WAAW,GAAG,KAAKrB,OAAL,CAAasB,IAAb,CAAkB,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACR,EAAT,KAAgBA,EAApB;AAAA,OAA1B,CAApB;AACA,aAAOM,WAAP;AACH;;;mCAEcG,O,EAASC,M,EAAQ;AAC5B,WAAKzB,OAAL,CAAa0B,MAAb,CAAoBD,MAApB,EAA4B,CAA5B,EAA+BD,OAA/B;AACA,aAAO,KAAKxB,OAAZ;AACH;;;mCAEce,E,EAAI;AACf,UAAMY,OAAO,GAAG,KAAK3B,OAArB;AACA,UAAM4B,SAAS,GAAGD,OAAO,CAACE,SAAR,CAAkB,UAAAN,QAAQ;AAAA,eAAIA,QAAQ,CAACR,EAAT,KAAgBA,EAApB;AAAA,OAA1B,CAAlB;;AACA,UAAIa,SAAS,IAAI,CAAjB,EAAoB;AAChBD,QAAAA,OAAO,CAACD,MAAR,CAAeE,SAAf,EAA0B,CAA1B;AACA,eAAO,IAAP;AACH;;AACD,aAAO,KAAP;AACH;;;;;;eAIU,IAAI7B,QAAJ,E","sourcesContent":["import moment from 'moment';\nimport proData from '../data/storage';\n\n\nclass Property {\n    constructor() {\n        this.proList = proData.propertyList\n    }\n\n    addNew(p) {\n        const {\n            owner, price, state, city, address, type, image_url\n        } = p;\n        const proId = this.proList.length;\n        Id = proId + 1;\n\n        const newProperty = {\n            owner,\n            id: Id,\n            price,\n            state,\n            city,\n            type,\n            address,\n            image_url,\n            created_on: moment.now(),\n            status: 'Available'\n        };\n\n        this.proList.push(newProperty);\n        return newProperty\n    }\n\n    AllProperty() {\n        return this.proList;\n    }\n\n    findProperty(id) {\n        const oneProperty = this.proList.find(property => property.id === id);\n        return oneProperty;\n    }\n\n    updateProperty(propObj, propId) {\n        this.proList.splice(propId, 1, propObj);\n        return this.proList;\n    }\n\n    deleteProperty(id) {\n        const propArr = this.proList;\n        const propIndex = propArr.findIndex(property => property.id === id);\n        if (propIndex >= 0) {\n            propArr.splice(propIndex, 1);\n            return true;\n        }\n        return false;\n    }\n}\n\n\nexport default new Property();"],"file":"property.js"}